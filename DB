### TRUNCATE TABLE 테이블명 # 테이블 초기화

DROP DATABASE IF EXISTS MEOW;
CREATE DATABASE MEOW;
USE MEOW;

### article 테이블
CREATE TABLE article(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	boardId INT UNSIGNED NOT NULL,
	title VARCHAR(50) NOT NULL,
	`body` TEXT NOT NULL,
	hitCnt INT UNSIGNED NOT NULL DEFAULT 0
);

### member 테이블
CREATE TABLE `member` (
  	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '회원 번호',
  	regDate DATETIME NOT NULL COMMENT '가입일',
  	updateDate DATETIME NOT NULL COMMENT '수정일',
  	loginId VARCHAR(20) NOT NULL COMMENT '아이디, 소셜회원으로 인한 Unique 제약사항 제거',
	loginPw VARCHAR(64) NOT NULL COMMENT '비밀번호',
	authLevel INT UNSIGNED NOT NULL DEFAULT 1 COMMENT '권한 레벨 (일반 = 1, 관리자 = 0)',
 	`name` VARCHAR(50) NOT NULL COMMENT '이름',
 	nickname VARCHAR(12) NOT NULL UNIQUE COMMENT '닉네임',
 	age INT UNSIGNED NOT NULL COMMENT '나이',
 	address TEXT NOT NULL COMMENT '주소, json형태',
 	cellphoneNum VARCHAR(20) NOT NULL COMMENT '전화번호',
  	email VARCHAR(254) NOT NULL COMMENT '이메일, 원래는 Unique 해야함',
 	`status` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT '회원 상태 (활동 = 0, 정지 = 1, 휴면 = 2, 탈퇴 = 3, 강제 탈퇴 = 4)',
  	lastLoginDate DATETIME NULL COMMENT '마지막 로그인 일시',
  	profileImage VARCHAR(255) NOT NULL COMMENT '프로필사진 파일명',
 	aboutMe VARCHAR(300) NULL COMMENT '자기소개, 300글자 제한'
);

### sns_info 테이블
CREATE TABLE sns_info (
  id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '소셜 로그인 회원번호',
  snsId VARCHAR(255) NOT NULL UNIQUE COMMENT '소셜 로그인 계정 고유ID',
  snsConnectDate DATETIME NULL COMMENT '소셜 로그인 첫 연동 일',
  snsType VARCHAR(10) NOT NULL COMMENT 'SNS 타입 (naver, kakao, google, github)',
  memberId INT UNSIGNED NULL,
  `name` VARCHAR(255) NOT NULL COMMENT '소셜 계정 이름',
  mobile VARCHAR(20) NULL COMMENT '소셜 계정 전화번호',
  email VARCHAR(255) NULL COMMENT '소셜 계정 이메일',
  profileImage VARCHAR(255) NULL COMMENT 'SNS 프로필사진 파일명'
);

### member_deletion_reason 테이블
CREATE TABLE member_deletion_reason (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL COMMENT '탈퇴일',
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    deletionReasonCode VARCHAR(20) NOT NULL COMMENT '복수선택, 1 = 콘텐츠 불만족, 2 = 부정적인 커뮤니티 경험, 3 = 다른 서비스 이용, 4 = 이용 빈도 낮음, 5 = 서비스 불만족, 6 = 직접 입력',
    customDeletionReason VARCHAR(100) NULL COMMENT '직접 입력 데이터 (100글자 제한)'
);

### companion_cat 테이블
CREATE TABLE companion_cat (
  	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '반려묘 번호',
  	regDate DATETIME NOT NULL COMMENT '등록일',
  	updateDate DATETIME NOT NULL COMMENT '수정일',
  	memberId INT UNSIGNED NOT NULL COMMENT '유저 ID',
 	`name` VARCHAR(50) NOT NULL COMMENT '이름',
 	gender VARCHAR(1) NOT NULL COMMENT '성별',
 	birthDate DATE NOT NULL COMMENT '생년월일',
 	profileImage VARCHAR(255) NULL COMMENT '프로필사진',
 	aboutCat VARCHAR(100) NULL COMMENT '반려묘 소개, 300글자 제한'
);

### board 테이블
CREATE TABLE board(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	`CODE` VARCHAR(20) NOT NULL COMMENT 'all, notice, free, catCompanion, trade, meeting',
	`NAME` VARCHAR(20) NOT NULL COMMENT '전체, 공지사항, 자유, 반려묘, 거래, 모임'
);


### friend 테이블
CREATE TABLE friend (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '친구 관계 번호',
    acceptDate DATETIME NULL COMMENT '친구 수락일',
    deleteDate DATETIME NULL COMMENT '친구 삭제일',
    senderId INT UNSIGNED NOT NULL COMMENT '친구 요청 회원 ID',
    receiverId INT UNSIGNED NOT NULL COMMENT '친구 응답 회원 ID'
);

### chat 테이블 
CREATE TABLE chat (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '방 번호',
    openDate DATETIME NOT NULL COMMENT '개설일',
    closeDate DATETIME NULL COMMENT '종료일',
    createrId INT UNSIGNED NOT NULL COMMENT '개설자 ID'
);

### req_res 테이블
CREATE TABLE req_res (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '요청 번호',
    requestDate DATETIME NOT NULL COMMENT '요청일',
    responseDate DATETIME NULL COMMENT '응답일',
    requesterId INT NOT NULL COMMENT '요청 보낸 회원 ID',
    recipientId INT NOT NULL COMMENT '응답 받는 회원 ID',
    `status` VARCHAR(10) NULL DEFAULT 'pending' COMMENT '요청 상태, 보류 = pending, 수락 = accepted, 거절 = refuse, 확인 = checked',
    `code` VARCHAR(20) NOT NULL COMMENT '요청 코드 (friend, chat, inquiry)'
);


### inquiry 테이블
CREATE TABLE inquiry (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '접수 번호, receiptId',
    regDate DATETIME NOT NULL COMMENT '접수일',
    updateDate DATETIME NULL COMMENT '처리일',
    memberId INT UNSIGNED NOT NULL COMMENT '접수한 회원 ID',
    `type` VARCHAR(20) NOT NULL COMMENT '접수 유형, 문의 = inquiry, 신고 = report, 버그제보 = bug, 기타건의사항 = suggestion',
    title VARCHAR(50) NOT NULL COMMENT '제목',
    `body` TEXT NOT NULL COMMENT '사용자 문의 내용',
    answerBody TEXT NULL COMMENT '관리자 답변 내용'
    imagePath VARCHAR(255) NOT NULL COMMENT '사용자 이미지 참고 시 경로 여부',
    `status` VARCHAR(20) NOT NULL COMMENT '상태, 처리중 = progress, 처리완료 = complete'
);


### customer_feedback 테이블
CREATE TABLE customer_feedback (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '번호',
    regDate DATETIME NOT NULL COMMENT '작성일',
    updateDate DATETIME NULL COMMENT '수정일',
    memberId INT UNSIGNED NOT NULL COMMENT '작성자 ID',
    content TEXT NOT NULL COMMENT '개선사항 or 피드백 내용'
);


### reaction 테이블 (사용자의 반응을 관리하는 테이블, 좋아요 & 싫어요)
CREATE TABLE reaction (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL COMMENT '등록일',
	memberId INT UNSIGNED NOT NULL COMMENT '회원 ID',
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
    reactionType TINYINT(1) NOT NULL COMMENT '반응, 0 = 좋아요, 1 = 싫어요',
    `point` INT UNSIGNED NOT NULL DEFAULT 0
);

### reply 테이블
CREATE TABLE reply(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	memberId INT UNSIGNED NOT NULL,
	relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드',
	relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`body` VARCHAR(300) NOT NULL COMMENT '댓글 300글자 제한'
);

### report 테이블
CREATE TABLE report (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL COMMENT '신고일',
	updateDate DATETIME NULL COMMENT '처리일',
	reporterId INT UNSIGNED NOT NULL COMMENT '신고자 ID',
	reportedTargetId INT UNSIGNED NOT NULL COMMENT '신고 대상자 ID',
	relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드 (article, member, reply...)',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
    `body` TEXT NOT NULL COMMENT '신고 내용',
    memo TEXT NULL COMMENT '관리자 메모',
    `type` INT UNSIGNED NOT NULL COMMENT '신고 유형 (스팸 = 1, 욕설 또는 비방 = 2, 성적인 콘텐츠 = 3, 저작권 침해 = 4, 사기 또는 부정행위 = 5, 기타 = 6)',
    processing INT UNSIGNED NULL COMMENT '회원 신고 처리 (경고 = 1, 정지 = 2, 강제탈퇴 = 3, 잘못된 신고 = 4)'
);

### calendar 테이블
CREATE TABLE calendar (
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '일정 ID',
	calendarId VARCHAR(10) NOT NULL COMMENT '캘린더 목록 ID',
	regDate DATETIME NOT NULL COMMENT '일정 추가일',
	updateDate DATETIME NOT NULL COMMENT '일정 수정일',
	startDate DATETIME NOT NULL COMMENT '일정 시작일',
	endDate DATETIME NULL COMMENT '일정 종료일',
	memberId INT UNSIGNED NOT NULL COMMENT '회원 ID',
	title VARCHAR(100) NOT NULL COMMENT '일정 제목',
	isAllday BOOLEAN NOT NULL COMMENT '종일 일정 여부',
	location VARCHAR(100) NULL COMMENT '일정 장소',
	`state` VARCHAR(4) NOT NULL COMMENT '일정 상태 (Busy || Free)',
	isPrivate BOOLEAN NOT NULL COMMENT '개인적인 일정 여부'
);



## 테스트 데이터
### article
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = FLOOR(RAND() * 6 + 1),
title = CONCAT('테스트 제목_', FLOOR(RAND() * 10000 + 1)),
`body` = CONCAT('테스트 내용_', FLOOR(RAND() * 10000 + 1));

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = FLOOR(RAND() * 4 + 3),
title = CONCAT('테스트 제목_', FLOOR(RAND() * 10000 + 1)),
`body` = CONCAT('테스트 내용_', FLOOR(RAND() * 10000 + 1));

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
boardId = FLOOR(RAND() * 4 + 3),
title = CONCAT('테스트 제목_', FLOOR(RAND() * 10000 + 1)),
`body` = CONCAT('테스트 내용_', FLOOR(RAND() * 10000 + 1));


### member
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'admin1234',
loginPw = '8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918',		# Admin1234@@
authLevel = 0,
`name` = '관리자',
nickname = '관리자',
age = 24,
address = '{"zonecode": "34134", "sido": "대전", "sigungu": "유성구", "bname": "궁동", "jibunAddress": "", "roadAddress": "대전 유성구 대학로 99", "detailAddress": ""}',
cellphoneNum = '01020000208',
email = 'admin@admin.com',
lastLoginDate = NOW();

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'testId01',
loginPw = '3237e2749c5fb3bec0053123a7585e8cfac345753a2d9aadb8d082da065f9fc2',		# testPw01!@
`name` = '테스트1',
nickname = '테스트1',
age = 50,
address = '{"zonecode": "34136", "sido": "대전", "sigungu": "유성구", "bname": "장대동", "jibunAddress": "대전 유성구 장대동 316-8", "roadAddress": "대전 유성구 유성대로822번길 29", "detailAddress": "신성빌라 303호"}',
cellphoneNum = '01000010001',
email = 'test1@test.com',
lastLoginDate = NOW();

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'testId02',
loginPw = '47af0d2d6601bde1ca27b7c8f48bb8e53c87e78b899a8d0c6c2fb4f66917354f',		# testPw02!@
`name` = '테스트2',
nickname = '테스트2',
age = 30,
address = '{"zonecode": "35272", "sido": "대전", "sigungu": "서구", "bname": "갈마동", "jibunAddress": "대전 서구 갈마동 349-1", "roadAddress": "대전 서구 갈마중로16번길 17", "detailAddress": "향백하우스 201호"}',
cellphoneNum = '01000020002',
email = 'test2@test.com',
lastLoginDate = NOW();


### companion_cat
INSERT INTO companion_cat
SET regDate = NOW()
    , updateDate = NOW()
    , memberId = 2
    , `name` = '하늘'
    , gender = 'M'
    , birthDate = '2020-02-16'
    , aboutCat = '안녕하세요. 하늘입니다.';

INSERT INTO companion_cat
SET regDate = NOW()
    , updateDate = NOW()
    , memberId = 2
    , `name` = '하루'
    , gender = 'M'
    , birthDate = '2016-05-24'
    , aboutCat = '안녕하세요. 하루입니다.';

INSERT INTO companion_cat
SET regDate = NOW()
    , updateDate = NOW()
    , memberId = 2
    , `name` = '하나'
    , gender = 'F'
    , birthDate = '2016-12-24'
    , aboutCat = '안녕하세요. 하나입니다.';

INSERT INTO companion_cat
SET regDate = NOW()
    , updateDate = NOW()
    , memberId = 2
    , `name` = '하니'
    , gender = 'F'
    , birthDate = '2020-11-11'
    , aboutCat = '안녕하세요. 하니입니다.';
    
INSERT INTO companion_cat
SET regDate = NOW()
    , updateDate = NOW()
    , memberId = 2
    , `name` = '하하하'
    , gender = 'M'
    , birthDate = '2014-01-01'
    , aboutCat = '안녕하세요. 하하하입니다.';


### board
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'all',
`name` = '전체';

INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'notice',
`name` = '공지사항';

INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'free',
`name` = '자유';

INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'catCompanion',
`name` = '반려묘';

INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'trade',
`name` = '거래';

INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'meeting',
`name` = '모임';


### customer_feedback
INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 6,
content = '로그인 버튼 디자인좀 수정해주세요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 4,
content = '회원가입이 어려워요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
content = '서비스가 매우 만족스러워요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
content = '웹사이트 사용이 편리합니다.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
content = '고객센터 응대가 좋아요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 4,
content = '서비스가 향상되었으면 좋겠어요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 5,
content = '좀 더 다양한 기능이 추가되었으면 좋겠어요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 6,
content = '고객 의견을 더욱 수용해주셨으면 좋겠어요.';

INSERT INTO customer_feedback
SET regDate = NOW(),
updateDate = NOW(),
memberId = 7,
content = '더 나은 서비스를 위해 노력해주셔서 감사합니다.';